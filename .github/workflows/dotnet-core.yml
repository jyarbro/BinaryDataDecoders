name: .NET Core

on:
  push:
    branches: [ master ]
    paths: ['src/**']    
  pull_request:
    branches: [ master ]
    paths: ['src/**']    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2      
    - name: Fetch all history for all tags and branches
      run: git fetch --prune --unshallow
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.x
      
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.2
      with:
        versionSpec: '5.2.4'
    - name: Use GitVersion
      id: gitversion # step id used as reference for output values
      uses: gittools/actions/gitversion/execute@v0.9.2
    - name: Display Version
      run: |
        echo "Major: ${{ steps.gitversion.outputs.major }}"
        echo "Minor: ${{ steps.gitversion.outputs.minor }}"
        echo "Patch: ${{ steps.gitversion.outputs.patch }}"
        echo "PreReleaseTag: ${{ steps.gitversion.outputs.preReleaseTag }}"
        echo "PreReleaseTagWithDash: ${{ steps.gitversion.outputs.preReleaseTagWithDash }}"
        echo "PreReleaseLabel: ${{ steps.gitversion.outputs.preReleaseLabel }}"
        echo "PreReleaseNumber: ${{ steps.gitversion.outputs.preReleaseNumber }}"
        echo "WeightedPreReleaseNumber: ${{ steps.gitversion.outputs.weightedPreReleaseNumber }}"
        echo "BuildMetaData: ${{ steps.gitversion.outputs.buildMetaData }}"
        echo "BuildMetaDataPadded: ${{ steps.gitversion.outputs.buildMetaDataPadded }}"
        echo "FullBuildMetaData: ${{ steps.gitversion.outputs.fullBuildMetaData }}"
        echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
        echo "LegacySemVer: ${{ steps.gitversion.outputs.legacySemVer }}"
        echo "LegacySemVerPadded: ${{ steps.gitversion.outputs.legacySemVerPadded }}"
        echo "AssemblySemVer: ${{ steps.gitversion.outputs.assemblySemVer }}"
        echo "AssemblySemFileVer: ${{ steps.gitversion.outputs.assemblySemFileVer }}"
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
        echo "InformationalVersion: ${{ steps.gitversion.outputs.informationalVersion }}"
        echo "BranchName: ${{ steps.gitversion.outputs.branchName }}"
        echo "Sha: ${{ steps.gitversion.outputs.sha }}"
        echo "ShortSha: ${{ steps.gitversion.outputs.shortSha }}"
        echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
        echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
        echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
        echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
        echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
        echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
        echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"  
        
    - name: Build
      run: |
        dotnet restore ./src/BinaryDataDecoders.sln
        dotnet build ./src/BinaryDataDecoders.sln --configuration Release --no-restore -p:Version=${{ steps.gitversion.outputs.fullSemVer }}
        
    - name: Run Tests and Code Coverage
      run: |
        dotnet test ./src/BinaryDataDecoders.sln --no-restore --verbosity normal --nologo --filter "TestCategory=Unit|TestCategory=Simulate" -s ./src/.runsettings --collect:"XPlat Code Coverage" -r ./TestResults
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator "-reports:./TestResults/**/coverage.cobertura.xml" "-targetDir:./TestResults/Coverage/Reports" "-reportTypes:HtmlInline;Cobertura;PngChart" "-title:BinaryDataDecoders - ${{ steps.gitversion.outputs.fullSemVer }}"
    - name: Publish Test Reports
      uses: actions/upload-artifact@v2
      with:
        name: BinaryDataDecoders_${{ steps.gitversion.outputs.fullSemVer }}_TestResults
        path: ./TestResults/Coverage/Reports
    
    # Worry about this later
    #- name: Package
    #  run: dotnet pack --no-build --no-restore ./src/BinaryDataDecoders.sln  -o "./Nuget"
    #- name: Publish Packages
    #  uses: actions/upload-artifact@v2
    #  with:
    #    name: BinaryDataDecoders_${{ steps.gitversion.outputs.fullSemVer }}_Nuget
    #    path: ./Nuget
      
